/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.sistema_peluqueria;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Casa
 */
public class CitasView extends javax.swing.JFrame {

    private CitasDAO citaDAO;
    private ClienteDAO clienteDAO;
    private EmpleadoDAO empleadoDAO;
    private DefaultTableModel model;
    private DefaultComboBoxModel modelo_combobox;

    /**
     * Creates new form CitasView
     */
    public CitasView() {
        initComponents();
        btn_actualizarCita.setVisible(false);
        txt_idCita.setEnabled(false);
        txt_idCita.setVisible(false);
        lbl_idCita.setVisible(false);
        btn_eliminarCita.setVisible(false);
        setLocationRelativeTo(null);
        cargarCitas();
        cargarClientes(cbx_listaClientes);
        cargarEmpleado(cbx_listaEmpleados);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        lbl_idCita = new java.awt.Label();
        lbl_idCliente = new java.awt.Label();
        lbl_idEmpleado = new java.awt.Label();
        label5 = new java.awt.Label();
        txt_idCita = new java.awt.TextField();
        label6 = new java.awt.Label();
        label7 = new java.awt.Label();
        label8 = new java.awt.Label();
        label9 = new java.awt.Label();
        txt_horaEntrada = new java.awt.TextField();
        txt_horaSalida = new java.awt.TextField();
        txt_estadoCita = new java.awt.TextField();
        txt_observacion = new java.awt.TextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_listaCitas = new javax.swing.JTable();
        btn_regresarCita = new javax.swing.JButton();
        txt_fechaCita = new com.toedter.calendar.JDateChooser();
        cbx_listaClientes = new javax.swing.JComboBox<>();
        cbx_listaEmpleados = new javax.swing.JComboBox<>();
        btn_actualizarCita = new javax.swing.JButton();
        btn_eliminarCita = new javax.swing.JButton();
        btn_a침adirCita = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label1.setFont(new java.awt.Font("Britannic Bold", 0, 14)); // NOI18N
        label1.setText("REGISTRO DE CITAS");

        lbl_idCita.setText("ID Cita:");

        lbl_idCliente.setText("Cliente:");

        lbl_idEmpleado.setText("Empleado:");

        label5.setText("Fecha Cita:");

        label6.setText("Hora de Entrada:");

        label7.setText("Hora de Salida:");

        label8.setText("Estado de la Cita:");

        label9.setText("Observacion:");

        tbl_listaCitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Cliente", "ID Empleado", "Fecha", "Hora de Entrada", "Hora de Salida", "Estado", "Observaci칩n"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbl_listaCitas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_listaCitasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_listaCitas);

        btn_regresarCita.setText("Regresar");
        btn_regresarCita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_regresarCitaMouseClicked(evt);
            }
        });

        cbx_listaClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_listaClientesActionPerformed(evt);
            }
        });

        btn_actualizarCita.setText("Actualizar");
        btn_actualizarCita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_actualizarCitaMouseClicked(evt);
            }
        });

        btn_eliminarCita.setText("Eliminar");
        btn_eliminarCita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_eliminarCitaMouseClicked(evt);
            }
        });

        btn_a침adirCita.setText("A침adir");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(347, 347, 347)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_regresarCita)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lbl_idEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_idCita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_idCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(label5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txt_fechaCita, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                        .addComponent(cbx_listaClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbx_listaEmpleados, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txt_idCita, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_horaEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_horaSalida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_estadoCita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_observacion, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_eliminarCita)
                                .addGap(18, 18, 18)
                                .addComponent(btn_actualizarCita)
                                .addGap(18, 18, 18)
                                .addComponent(btn_a침adirCita)))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_idCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_idCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_horaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_idCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_horaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_idEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_estadoCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(cbx_listaEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_observacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_fechaCita, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cbx_listaClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_actualizarCita)
                    .addComponent(btn_eliminarCita)
                    .addComponent(btn_a침adirCita))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_regresarCita)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_listaCitasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_listaCitasMouseClicked
        try {
            // TODO add your handling code here:
            int fila_seleccionada = tbl_listaCitas.rowAtPoint(evt.getPoint());
            txt_idCita.setText(String.valueOf(tbl_listaCitas.getValueAt(fila_seleccionada, 0)));
            cbx_listaClientes.setSelectedItem(String.valueOf(tbl_listaCitas.getValueAt(fila_seleccionada, 1)));
            cbx_listaEmpleados.setSelectedItem(String.valueOf(tbl_listaCitas.getValueAt(fila_seleccionada, 2)));
            java.util.Date fecha_cita = new SimpleDateFormat("yyyy-MM-dd").parse(String.valueOf(tbl_listaCitas.getValueAt(fila_seleccionada, 3)));
            txt_fechaCita.setDate(fecha_cita);
            txt_horaEntrada.setText(String.valueOf(tbl_listaCitas.getValueAt(fila_seleccionada, 4)));
            txt_horaSalida.setText(String.valueOf(tbl_listaCitas.getValueAt(fila_seleccionada, 5)));
            txt_estadoCita.setText(String.valueOf(tbl_listaCitas.getValueAt(fila_seleccionada, 6)));
            txt_observacion.setText(String.valueOf(tbl_listaCitas.getValueAt(fila_seleccionada, 7)));
            btn_actualizarCita.setVisible(true);
            btn_eliminarCita.setVisible(true);
            btn_a침adirCita.setVisible(false);
            txt_idCita.setVisible(true);
            lbl_idCita.setVisible(true);
        } catch (ParseException ex) {
            Logger.getLogger(CitasView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbl_listaCitasMouseClicked

    private void btn_regresarCitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_regresarCitaMouseClicked
        // TODO add your handling code here:
        this.dispose();
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MenuView().setVisible(true);
            }
        });
    }//GEN-LAST:event_btn_regresarCitaMouseClicked

    private void cbx_listaClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_listaClientesActionPerformed
        ComboBoxItemClientes cliente_seleccioando = (ComboBoxItemClientes) cbx_listaClientes.getSelectedItem();
        String id_cliente_seleccionado = cliente_seleccioando.getClave();
        System.out.println("seleccionado" + id_cliente_seleccionado);
    }//GEN-LAST:event_cbx_listaClientesActionPerformed

    private void btn_actualizarCitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_actualizarCitaMouseClicked
        // TODO add your handling code here:
        actualizarCita();
    }//GEN-LAST:event_btn_actualizarCitaMouseClicked

    private void btn_eliminarCitaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_eliminarCitaMouseClicked
        // TODO add your handling code here:
        eliminarCita();
    }//GEN-LAST:event_btn_eliminarCitaMouseClicked

    private void cargarCitas() {
        String[] columnNames = {"ID", "Cliente", "Empleado", "Fecha", "Hora de Entrada", "Hora de Salida", "Estado", "Observacion",};
        model = new DefaultTableModel(columnNames, 0);
        citaDAO = new CitasDAO();

        List<DetalleCitas> citas = new ArrayList<>();
        citas = citaDAO.obtenerTodasCitas();
        for (DetalleCitas cita : citas) {
            model.addRow(new Object[]{cita.getIdCita(), cita.getNombreClienteCita(), cita.getNombreEmpleadoCita(), cita.getFechaCita(), cita.getHoraEntradaCita(), cita.getHoraSalidaCita(), cita.getEstadoCita(), cita.getObservacionCita()});
        }
        tbl_listaCitas.setModel(model);

    }

    private void limpiarCampos() {
        txt_idCita.setText("");
        txt_fechaCita.setDateFormatString("");
        txt_horaEntrada.setText("");
        txt_horaSalida.setText("");
        txt_estadoCita.setText("");
        txt_observacion.setText("");

    }

    private void cargarClientes(JComboBox c) {
        DefaultComboBoxModel combo_model = new DefaultComboBoxModel();
        clienteDAO = new ClienteDAO();
        List<Cliente> clientes = new ArrayList<>();
        clientes = clienteDAO.obtenerTodosClientes();
        ComboBoxItemClientes item_cliente = new ComboBoxItemClientes("0", "Seleccione");
        combo_model.addElement(item_cliente);
        for (Cliente cliente : clientes) {
            item_cliente = new ComboBoxItemClientes(String.valueOf(cliente.getId_cliente()), cliente.getNombre_cliente());
            combo_model.addElement(item_cliente);
        }
        c.setModel(combo_model);
    }

    private void cargarEmpleado(JComboBox c) {
        DefaultComboBoxModel combo_model = new DefaultComboBoxModel();
        empleadoDAO = new EmpleadoDAO();
        List<Empleado> empleados = new ArrayList<>();
        empleados = empleadoDAO.obtenerTodosEmpleados();
        ComboBoxItemEmpleados item_empleado = new ComboBoxItemEmpleados("0", "Seleccione");
        combo_model.addElement(item_empleado);
        for (Empleado empleado : empleados) {
            item_empleado = new ComboBoxItemEmpleados(String.valueOf(empleado.getId_empleado()), empleado.getNombre_empleado());
            combo_model.addElement(item_empleado);
        }
        c.setModel(combo_model);
    }

    private void agregarCita() {

        try {
            ComboBoxItemClientes cliente_seleccioando = (ComboBoxItemClientes) cbx_listaClientes.getSelectedItem();
            String id_cliente_seleccionado = cliente_seleccioando.getClave();
            int idCliente = Integer.parseInt(id_cliente_seleccionado);

            ComboBoxItemEmpleados empleado_seleccioando = (ComboBoxItemEmpleados) cbx_listaEmpleados.getSelectedItem();
            String id_empleado_seleccionado = empleado_seleccioando.getClave();
            int idEmpleado = Integer.parseInt(id_empleado_seleccionado);//**************************

            int year = txt_fechaCita.getCalendar().get(Calendar.YEAR);
            int mes = txt_fechaCita.getCalendar().get(Calendar.MARCH);
            int dia = txt_fechaCita.getCalendar().get(Calendar.DAY_OF_MONTH);
            String fecha = year + "-" + mes + "-" + dia;
            String horaEntrada = txt_horaEntrada.getText();
            String horaSalida = txt_horaSalida.getText();
            String estado = txt_estadoCita.getText();
            String observacion = txt_observacion.getText();
            System.out.println(fecha);
            System.out.println(idCliente);
            System.out.println(idEmpleado);
            Cita nuevaCita = new Cita(0, idCliente, idEmpleado, fecha, horaEntrada, horaSalida, estado, observacion);
            if (citaDAO.agregarCita(nuevaCita)) {
                cargarCitas();
                limpiarCampos();
                //Muestra una ventana de dialogo con el mensaje 
                JOptionPane.showMessageDialog(null, "Se agreg칩 el cliente correctamente");
            } else {
                //Muestra una ventana de dialogo con el mensaje
                JOptionPane.showMessageDialog(null, "No se pudo agregar el cliente");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void actualizarCita() {
        int idCita = Integer.parseInt(txt_idCita.getText());

        ComboBoxItemClientes cliente_seleccioando = (ComboBoxItemClientes) cbx_listaClientes.getSelectedItem();
        String id_cliente_seleccionado = cliente_seleccioando.getClave();
        int idCliente = Integer.parseInt(id_cliente_seleccionado);

        ComboBoxItemEmpleados empleado_seleccioando = (ComboBoxItemEmpleados) cbx_listaEmpleados.getSelectedItem();
        String id_empleado_seleccionado = empleado_seleccioando.getClave();
        int idEmpleado = Integer.parseInt(id_empleado_seleccionado);

        int year = txt_fechaCita.getCalendar().get(Calendar.YEAR);
        int mes = txt_fechaCita.getCalendar().get(Calendar.MARCH);
        int dia = txt_fechaCita.getCalendar().get(Calendar.DAY_OF_MONTH);
        String fecha = year + "-" + mes + "-" + dia;
        
        String horaEntrada = txt_horaEntrada.getText();
        String horaSalida = txt_horaSalida.getText();
        String estado = txt_estadoCita.getText();
        String observacion = txt_observacion.getText();

        Cita citaActualizada = new Cita(idCita, idCliente, idEmpleado, fecha, horaEntrada, horaSalida, estado, observacion);
        if (citaDAO.actualizarCita(citaActualizada)) {
            cargarCitas();
            limpiarCampos();
            btn_actualizarCita.setVisible(false);
            btn_a침adirCita.setVisible(true);
            btn_eliminarCita.setVisible(false);
            lbl_idCliente.setVisible(false);
            //Muestra una ventana de dialogo con el mensaje 
            JOptionPane.showMessageDialog(null, "Se actualiz칩 la cita correctamente");
        } else {
            //Muestra una ventana de dialogo con el mensaje
            JOptionPane.showMessageDialog(null, "No se pudo actualizar la cita");
        }

    }

    private void eliminarCita() {
        int id = Integer.parseInt(txt_idCita.getText());
        if (citaDAO.eliminarCita(id)) {
            cargarCitas();
            limpiarCampos();
            btn_actualizarCita.setVisible(false);
            btn_a침adirCita.setVisible(true);
            btn_eliminarCita.setVisible(false);
            lbl_idCita.setVisible(false);
            txt_idCita.setVisible(false);
            //Muestra una ventana de dialogo con el mensaje 
            JOptionPane.showMessageDialog(null, "Se elimin칩 la cita correctamente");
        } else {
            //Muestra una ventana de dialogo con el mensaje
            JOptionPane.showMessageDialog(null, "No se pudo eliminar la cita");
        }

    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_actualizarCita;
    private javax.swing.JButton btn_a침adirCita;
    private javax.swing.JButton btn_eliminarCita;
    private javax.swing.JButton btn_regresarCita;
    private javax.swing.JComboBox<String> cbx_listaClientes;
    private javax.swing.JComboBox<String> cbx_listaEmpleados;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    private java.awt.Label lbl_idCita;
    private java.awt.Label lbl_idCliente;
    private java.awt.Label lbl_idEmpleado;
    private javax.swing.JTable tbl_listaCitas;
    private java.awt.TextField txt_estadoCita;
    private com.toedter.calendar.JDateChooser txt_fechaCita;
    private java.awt.TextField txt_horaEntrada;
    private java.awt.TextField txt_horaSalida;
    private java.awt.TextField txt_idCita;
    private java.awt.TextField txt_observacion;
    // End of variables declaration//GEN-END:variables
}
